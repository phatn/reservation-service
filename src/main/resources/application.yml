spring:
  kafka:
    consumer:
      value-deserializer: "org.springframework.kafka.support.serializer.JsonDeserializer"
      properties:
        "[spring.json.value.default.type]": "edu.miu.sa.reservation.entity.Reservation"
        "[spring.json.trusted.packages]": "edu.miu.sa.reservation"
    producer:
      value-serializer: "org.springframework.kafka.support.serializer.JsonSerializer"
      properties:
        "[spring.json.add.type.headers]": false

---
spring:
  config:
    activate:
      on-profile: dev
  kafka:
    bootstrap-servers: "localhost:9092"

  main:
    allow-bean-definition-overriding: true

  data:
    cassandra:
      contact-points: "localhost"
      keyspace-name: reservation_ks
      port: 9042
      schema-action: create_if_not_exists
      local-datacenter: datacenter1

kafka:
  topic: "ReservationOrderEvent"

---
spring:
  config:
    activate:
      on-profile: prod
  kafka:
    bootstrap-servers: ${BOOTSTRAP_SERVERS}

  main:
    allow-bean-definition-overriding: true
  data:
    cassandra:
      contact-points: ${CASSANDRA_CONTACT_POINTS}
      keyspace-name: ${KEYSPACE_NAME}
      port: ${CASSANDRA_PORT}
      schema-action: create_if_not_exists
      local-datacenter: ${DATA_CENTER}
kafka:
  topic: ${RESERVATION_ORDER_EVENT}